[tool:pytest]
# Basic pytest configuration for AI Agent

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 6.0

# Add project source to Python path
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=src/ai_agent
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    -p no:warnings

# Markers for categorizing tests
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    external: Tests that require external services
    llm: Tests that require LLM API calls
    database: Tests that require database
    redis: Tests that require Redis
    vector_store: Tests that require vector store
    plugin: Plugin-related tests
    tool: Tool-related tests
    security: Security-related tests
    performance: Performance tests
    smoke: Smoke tests for basic functionality

# Asyncio configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Disable warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pkg_resources
    ignore::pytest.PytestUnraisableExceptionWarning

# Environment variables for testing
env =
    AI_AGENT_ENV = testing
    AI_AGENT_DEBUG = true
    DATABASE_URL = sqlite:///:memory:
    REDIS_URL = redis://localhost:6379/15
    MOCK_LLM = true
    MOCK_EXTERNAL_APIS = true

# Log configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Collect ignore patterns
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    ".tox",
    "docs"
]

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS

# Coverage configuration
[coverage:run]
source = src/ai_agent
omit = 
    */tests/*
    */test_*